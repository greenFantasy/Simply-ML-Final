{"ast":null,"code":"import * as mixins from './mixins';\nimport * as ref from './valueref';\n\nfunction encodeEntry(model, fixedShape) {\n  const config = model.config,\n        width = model.width,\n        height = model.height;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, mixins.baseEncodeEntry(model, {\n    align: 'ignore',\n    baseline: 'ignore',\n    color: 'include',\n    size: 'include',\n    orient: 'ignore'\n  })), mixins.pointPosition('x', model, ref.mid(width))), mixins.pointPosition('y', model, ref.mid(height))), mixins.nonPosition('size', model)), shapeMixins(model, config, fixedShape));\n}\n\nexport function shapeMixins(model, config, fixedShape) {\n  if (fixedShape) {\n    return {\n      shape: {\n        value: fixedShape\n      }\n    };\n  }\n\n  return mixins.nonPosition('shape', model);\n}\nexport const point = {\n  vgMark: 'symbol',\n  encodeEntry: model => {\n    return encodeEntry(model);\n  }\n};\nexport const circle = {\n  vgMark: 'symbol',\n  encodeEntry: model => {\n    return encodeEntry(model, 'circle');\n  }\n};\nexport const square = {\n  vgMark: 'symbol',\n  encodeEntry: model => {\n    return encodeEntry(model, 'square');\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst preact_1 = require(\"preact\");\n\nconst glamor_1 = require(\"glamor\");\n\nconst glamor_tachyons_1 = require(\"glamor-tachyons\");\n/**\n * Renders a container for tab links\n */\n\n\nclass Tabs extends preact_1.Component {\n  render() {\n    const _this$props = this.props,\n          tabNames = _this$props.tabNames,\n          activeTab = _this$props.activeTab,\n          handleClick = _this$props.handleClick;\n    const tabs = tabNames.length > 0 ? tabNames.map(name => preact_1.h(Tab, {\n      key: name,\n      id: name,\n      handleClick: handleClick,\n      isActive: name === activeTab\n    }, name)) : null;\n    const tabStyle = glamor_1.css(Object.assign({\n      overflowX: 'scroll',\n      overflowY: 'hidden',\n      whiteSpace: 'nowrap'\n    }, glamor_tachyons_1.tachyons('bb b--light-gray pb3 mt3')));\n    return preact_1.h(\"div\", {\n      className: \"\".concat(tabStyle, \" visor-tabs\")\n    }, tabs);\n  }\n\n}\n\nexports.Tabs = Tabs;\n/**\n * A link representing a tab. Note that the component does not contain the\n * tab content\n */\n\nclass Tab extends preact_1.Component {\n  render() {\n    const _this$props2 = this.props,\n          children = _this$props2.children,\n          isActive = _this$props2.isActive,\n          handleClick = _this$props2.handleClick,\n          id = _this$props2.id;\n    const tabStyle = glamor_1.css(Object.assign({\n      borderBottomColor: isActive ? '#357EDD' : '#AAAAAA',\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      cursor: 'pointer',\n      ':hover': {\n        color: '#357EDD'\n      },\n      display: 'inline-block'\n    }, glamor_tachyons_1.tachyons('b f5 mr3 pa2')));\n    return preact_1.h(\"a\", {\n      className: \"\".concat(tabStyle, \" tf-tab\"),\n      \"data-isactive\": isActive,\n      onClick: () => handleClick(id)\n    }, children);\n  }\n\n}","map":null,"metadata":{},"sourceType":"script"}
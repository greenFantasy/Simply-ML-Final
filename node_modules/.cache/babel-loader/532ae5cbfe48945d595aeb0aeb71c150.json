{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for loess transform nodes\n */\n\nexport class LoessTransformNode extends DataFlowNode {\n  constructor(parent, transform) {\n    super(parent);\n    this.transform = transform;\n    this.transform = duplicate(transform); // duplicate to prevent side effects\n\n    const specifiedAs = this.transform.as || [undefined, undefined];\n    this.transform.as = [specifiedAs[0] || transform.on, specifiedAs[1] || transform.loess];\n  }\n\n  clone() {\n    return new LoessTransformNode(null, duplicate(this.transform));\n  }\n\n  dependentFields() {\n    return new Set([this.transform.loess, this.transform.on, ...(this.transform.groupby || [])]);\n  }\n\n  producedFields() {\n    return new Set(this.transform.as);\n  }\n\n  hash() {\n    return \"LoessTransform \".concat(hash(this.transform));\n  }\n\n  assemble() {\n    const _a = this.transform,\n          loess = _a.loess,\n          on = _a.on,\n          rest = __rest(_a, [\"loess\", \"on\"]);\n\n    const result = Object.assign({\n      type: 'loess',\n      x: on,\n      y: loess\n    }, rest);\n    return result;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
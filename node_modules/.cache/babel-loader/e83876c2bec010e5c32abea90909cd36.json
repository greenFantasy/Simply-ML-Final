{"ast":null,"code":"import { Left, Right, Center, Start, End, Vertical } from './constants';\nimport { value } from '../../util';\nimport { stringValue } from 'vega-util';\nexport function lookup(spec, config) {\n  const _ = name => value(spec[name], config[name]);\n\n  _.isVertical = s => Vertical === value(spec.direction, config.direction || (s ? config.symbolDirection : config.gradientDirection));\n\n  _.gradientLength = () => value(spec.gradientLength, config.gradientLength || config.gradientWidth);\n\n  _.gradientThickness = () => value(spec.gradientThickness, config.gradientThickness || config.gradientHeight);\n\n  _.entryColumns = () => value(spec.columns, value(config.columns, +_.isVertical(true)));\n\n  return _;\n}\nexport function getEncoding(name, encode) {\n  var v = encode && (encode.update && encode.update[name] || encode.enter && encode.enter[name]);\n  return v && v.signal ? v : v ? v.value : null;\n}\nexport function getStyle(name, scope, style) {\n  var s = scope.config.style[style];\n  return s && s[name];\n}\nexport function anchorExpr(s, e, m) {\n  return \"item.anchor === \\\"\".concat(Start, \"\\\" ? \").concat(s, \" : item.anchor === \\\"\").concat(End, \"\\\" ? \").concat(e, \" : \").concat(m);\n}\nexport const alignExpr = anchorExpr(stringValue(Left), stringValue(Right), stringValue(Center));","map":null,"metadata":{},"sourceType":"module"}
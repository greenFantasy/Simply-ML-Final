{"ast":null,"code":"import { COMMON_AXIS_PROPERTIES_INDEX } from '../../axis';\nimport { duplicate, keys } from '../../util';\nimport { Split } from '../split';\n\nfunction isFalseOrNull(v) {\n  return v === false || v === null;\n}\n\nconst AXIS_COMPONENT_PROPERTIES_INDEX = Object.assign(Object.assign({\n  gridScale: 1,\n  scale: 1\n}, COMMON_AXIS_PROPERTIES_INDEX), {\n  labelExpr: 1,\n  encode: 1\n});\nexport const AXIS_COMPONENT_PROPERTIES = keys(AXIS_COMPONENT_PROPERTIES_INDEX);\nexport class AxisComponent extends Split {\n  constructor(explicit = {}, implicit = {}, mainExtracted = false) {\n    super();\n    this.explicit = explicit;\n    this.implicit = implicit;\n    this.mainExtracted = mainExtracted;\n  }\n\n  clone() {\n    return new AxisComponent(duplicate(this.explicit), duplicate(this.implicit), this.mainExtracted);\n  }\n\n  hasAxisPart(part) {\n    // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.\n    if (part === 'axis') {\n      // always has the axis container part\n      return true;\n    }\n\n    if (part === 'grid' || part === 'title') {\n      return !!this.get(part);\n    } // Other parts are enabled by default, so they should not be false or null.\n\n\n    return !isFalseOrNull(this.get(part));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
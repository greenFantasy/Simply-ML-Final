{"ast":null,"code":"import { duplicate, hash } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for flatten transform nodes\n */\n\nexport class FoldTransformNode extends DataFlowNode {\n  constructor(parent, transform) {\n    super(parent);\n    this.transform = transform;\n    this.transform = duplicate(transform); // duplicate to prevent side effects\n\n    const specifiedAs = this.transform.as || [undefined, undefined];\n    this.transform.as = [specifiedAs[0] || 'key', specifiedAs[1] || 'value'];\n  }\n\n  clone() {\n    return new FoldTransformNode(null, duplicate(this.transform));\n  }\n\n  dependentFields() {\n    return new Set(this.transform.fold);\n  }\n\n  producedFields() {\n    return new Set(this.transform.as);\n  }\n\n  hash() {\n    return \"FoldTransform \".concat(hash(this.transform));\n  }\n\n  assemble() {\n    const _this$transform = this.transform,\n          fold = _this$transform.fold,\n          as = _this$transform.as;\n    const result = {\n      type: 'fold',\n      fields: fold,\n      as\n    };\n    return result;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
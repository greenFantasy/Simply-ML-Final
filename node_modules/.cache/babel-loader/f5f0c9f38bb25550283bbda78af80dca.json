{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst preact_1 = require(\"preact\");\n\nconst glamor_1 = require(\"glamor\");\n\nconst glamor_tachyons_1 = require(\"glamor-tachyons\");\n/**\n * A surface is container for visualizations and other rendered thigns.\n * It consists of a containing DOM Element, a label and an empty drawArea.\n */\n\n\nclass SurfaceComponent extends preact_1.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          name = _this$props.name,\n          tab = _this$props.tab;\n    this.props.registerSurface(name, tab, this);\n  }\n\n  componentDidUpdate() {\n    // Prevent re-rendering of this component as it\n    // is primarily controlled outside of this class\n    return false;\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          name = _this$props2.name,\n          visible = _this$props2.visible,\n          styles = _this$props2.styles;\n    const finalStyles = Object.assign({}, SurfaceComponent.defaultStyles, styles);\n    const width = finalStyles.width,\n          height = finalStyles.height;\n    let maxHeight = finalStyles.maxHeight,\n        maxWidth = finalStyles.maxWidth;\n    maxHeight = height === SurfaceComponent.defaultStyles.height ? maxHeight : height;\n    maxWidth = width === SurfaceComponent.defaultStyles.width ? maxWidth : width;\n    const surfaceStyle = glamor_1.css({\n      display: visible ? 'block' : 'none',\n      backgroundColor: 'white',\n      marginTop: '10px',\n      marginBottom: '10px',\n      boxShadow: '0 0 6px -3px #777',\n      padding: '10px !important',\n      height,\n      width,\n      maxHeight,\n      maxWidth,\n      overflow: 'auto'\n    });\n    const labelStyle = glamor_1.css(Object.assign({\n      backgroundColor: 'white',\n      boxSizing: 'border-box',\n      borderBottom: '1px solid #357EDD',\n      lineHeight: '2em',\n      marginBottom: '20px'\n    }, glamor_tachyons_1.tachyons('fw6 tc')));\n    const drawAreaStyle = glamor_1.css({\n      boxSizing: 'border-box'\n    });\n    return preact_1.h(\"div\", {\n      className: \"\".concat(surfaceStyle, \" tf-surface\"),\n      ref: r => this.container = r,\n      \"data-visible\": visible\n    }, preact_1.h(\"div\", {\n      className: \"\".concat(labelStyle, \" tf-label\"),\n      ref: r => this.label = r\n    }, name), preact_1.h(\"div\", {\n      className: \"\".concat(drawAreaStyle, \" tf-draw-area\"),\n      ref: r => this.drawArea = r\n    }));\n  }\n\n}\n\nSurfaceComponent.defaultStyles = {\n  maxWidth: '550px',\n  maxHeight: '580px',\n  height: 'auto',\n  width: 'auto'\n};\nexports.SurfaceComponent = SurfaceComponent;","map":null,"metadata":{},"sourceType":"script"}
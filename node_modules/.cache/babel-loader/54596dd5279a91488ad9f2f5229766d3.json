{"ast":null,"code":"import { isTimeFormatFieldDef } from '../../channeldef';\nimport { ScaleType } from '../../scale';\nimport { keys } from '../../util';\nimport { timeFormatExpression } from '../common';\nexport function labels(model, channel, specifiedLabelsSpec) {\n  const fieldDef = model.fieldDef(channel) || (channel === 'x' ? model.fieldDef('x2') : channel === 'y' ? model.fieldDef('y2') : undefined);\n  const axis = model.axis(channel);\n  const config = model.config;\n  let labelsSpec = {}; // We use a label encoding instead of setting the `format` property because Vega does not let us determine how the format should be interpreted.\n\n  if (isTimeFormatFieldDef(fieldDef)) {\n    const isUTCScale = model.getScaleComponent(channel).get('type') === ScaleType.UTC;\n    const expr = timeFormatExpression('datum.value', fieldDef.timeUnit, axis.format, config.axis.shortTimeLabels, null, isUTCScale);\n\n    if (expr) {\n      labelsSpec.text = {\n        signal: expr\n      };\n    }\n  }\n\n  labelsSpec = Object.assign(Object.assign({}, labelsSpec), specifiedLabelsSpec);\n  return keys(labelsSpec).length === 0 ? undefined : labelsSpec;\n}","map":null,"metadata":{},"sourceType":"module"}
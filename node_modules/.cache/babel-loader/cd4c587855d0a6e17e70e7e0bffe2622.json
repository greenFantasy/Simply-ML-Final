{"ast":null,"code":"'use strict';\n\nvar helpers = require('./helpers');\n\nvar map = require('lodash/map');\n\nvar reduce = require('lodash/reduce');\n\nvar kebabCase = require('lodash/kebabCase');\n\nvar flatten = require('lodash/flatten');\n\nvar tachyons = require('../tachyons');\n\nfunction reduceRule(className, rule) {\n  var size = tachyons[helpers.getAtRuleSize(className)];\n  return reduce(rule, function (result, value, key) {\n    var raw = '.' + className + '{' + kebabCase(key) + ':' + value + ';}';\n\n    if (typeof size === 'string') {\n      raw = size + '{' + raw + '}';\n    }\n\n    result.push(raw);\n    return result;\n  }, []);\n}\n\nmodule.exports = function (classes) {\n  var classList;\n\n  if (typeof classes === 'string') {\n    classList = classes.split(' ');\n  } else {\n    classList = classes;\n  }\n\n  var raws = map(classList, function (className) {\n    var rule = tachyons[className];\n\n    if (typeof rule === 'string') {\n      var selector = rule;\n      rule = tachyons[selector];\n    }\n\n    if (rule) {\n      // console.log(rule)\n      return reduceRule(className, rule);\n    } else {\n      console.error(className + ' is not in the list of available Tachyons classes');\n      return [];\n    }\n  });\n  return flatten(raws);\n};","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as log from '../log';\nimport { isConcatSpec, isHConcatSpec, isVConcatSpec } from './concat';\nimport { isFacetSpec } from './facet';\nimport { isLayerSpec } from './layer';\nimport { isRepeatSpec } from './repeat';\nimport { isUnitSpec } from './unit';\nexport class SpecMapper {\n  map(spec, params) {\n    if (isFacetSpec(spec)) {\n      return this.mapFacet(spec, params);\n    } else if (isRepeatSpec(spec)) {\n      return this.mapRepeat(spec, params);\n    } else if (isHConcatSpec(spec)) {\n      return this.mapHConcat(spec, params);\n    } else if (isVConcatSpec(spec)) {\n      return this.mapVConcat(spec, params);\n    } else if (isConcatSpec(spec)) {\n      return this.mapConcat(spec, params);\n    } else {\n      return this.mapLayerOrUnit(spec, params);\n    }\n  }\n\n  mapLayerOrUnit(spec, params) {\n    if (isLayerSpec(spec)) {\n      return this.mapLayer(spec, params);\n    } else if (isUnitSpec(spec)) {\n      return this.mapUnit(spec, params);\n    }\n\n    throw new Error(log.message.invalidSpec(spec));\n  }\n\n  mapLayer(spec, params) {\n    return Object.assign(Object.assign({}, spec), {\n      layer: spec.layer.map(subspec => this.mapLayerOrUnit(subspec, params))\n    });\n  }\n\n  mapHConcat(spec, params) {\n    return Object.assign(Object.assign({}, spec), {\n      hconcat: spec.hconcat.map(subspec => this.map(subspec, params))\n    });\n  }\n\n  mapVConcat(spec, params) {\n    return Object.assign(Object.assign({}, spec), {\n      vconcat: spec.vconcat.map(subspec => this.map(subspec, params))\n    });\n  }\n\n  mapConcat(spec, params) {\n    const concat = spec.concat,\n          rest = __rest(spec, [\"concat\"]);\n\n    return Object.assign(Object.assign({}, rest), {\n      concat: concat.map(subspec => this.map(subspec, params))\n    });\n  }\n\n  mapFacet(spec, params) {\n    return Object.assign(Object.assign({}, spec), {\n      // TODO: remove \"any\" once we support all facet listed in https://github.com/vega/vega-lite/issues/2760\n      spec: this.map(spec.spec, params)\n    });\n  }\n\n  mapRepeat(spec, params) {\n    return Object.assign(Object.assign({}, spec), {\n      spec: this.map(spec.spec, params)\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}